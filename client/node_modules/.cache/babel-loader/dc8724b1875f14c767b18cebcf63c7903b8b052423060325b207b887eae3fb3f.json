{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: 'light',\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === 'light' ? 'dark' : 'light';\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error('user friends non exist :(');\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatePosts = state.posts.map(post => {\n        if (post._id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatePosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatePosts","map","post","_id","post_id","actions","reducer"],"sources":["C:/Users/pedro/OneDrive/Documentos/Social Media/Social-Media-App/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    mode: 'light',\r\n    user: null,\r\n    token: null,\r\n    posts: [],\r\n}\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers:{\r\n        setMode : (state)=>{\r\n            state.mode = state.mode === 'light' ? 'dark' : 'light'\r\n        },\r\n        setLogin: (state,action)=>{\r\n            state.user = action.payload.user;\r\n            state.token =action.payload.token\r\n        },\r\n        setLogout: (state)=>{\r\n            state.user = null;\r\n            state.token = null;\r\n        },\r\n        setFriends: (state, action)=>{\r\n            if(state.user){\r\n                state.user.friends = action.payload.friends;\r\n            } else{\r\n                console.error('user friends non exist :(')\r\n            }\r\n        }, \r\n        setPosts: (state, action) =>{\r\n            state.posts = action.payload.posts\r\n        },\r\n        setPost: (state, action) => {\r\n            const updatePosts = state.posts.map((post) =>{\r\n                if(post._id === action.payload.post_id) return action.payload.post\r\n                return post;\r\n            })\r\n            state.posts = updatePosts\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const {setMode, setLogin, setLogout, setFriends, setPosts, setPost} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAC;IACLC,OAAO,EAAIC,KAAK,IAAG;MACfA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDS,QAAQ,EAAEA,CAACD,KAAK,EAACE,MAAM,KAAG;MACtBF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAEQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACrC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAG;MAChBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAG;MACzB,IAAGF,KAAK,CAACP,IAAI,EAAC;QACVO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC/C,CAAC,MAAK;QACFC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAI;MACxBF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACtC,CAAC;IACDe,OAAO,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MACxB,MAAMS,WAAW,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAI;QACzC,IAAGA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACY,OAAO,EAAE,OAAOb,MAAM,CAACC,OAAO,CAACU,IAAI;QAClE,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,WAAW;IAC7B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAACZ,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEC,UAAU;EAAEI,QAAQ;EAAEC;AAAO,CAAC,GAAGd,SAAS,CAACoB,OAAO;AAE9F,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}